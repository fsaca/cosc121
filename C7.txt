// recursiveLinear.cpp

int linearSearch(const double v[], double searchNum, int numItems) {
  if (numItems < 0) {                              
    return -1;
  } else if (v[numItems] == searchNum) {           
    return numItems;
  } else {
    return linearSearch(v, searchNum, numItems-1); 
  }
}


// numEven.cpp

#include <cassert>

int numEven(const int v[], int numItems) {
  assert(numItems >= 0);
  if (numItems == 0) {                 
    return 0;
  } else if (v[numItems-1] % 2 == 0) { 
    return 1 + numEven(v, numItems-1);
  } else {                             
    return numEven(v, numItems-1);
  }
}


// sumOfDigits.cpp

#include <cassert>

int sumOfDigits(int n) {
  assert(n >= 0);
  if (n < 10) {                       
    return n;
  } else {                                                 
    return n%10 + sumOfDigits(n/10);
  }
}
